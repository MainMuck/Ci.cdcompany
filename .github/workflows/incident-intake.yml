name: Incident Intake (alerts → tickets)

on:
  workflow_run:
    workflows: ["Security Framework Gates"]
    types: [completed]
  schedule:
    - cron: '*/30 * * * *'   # каждые 30 мин проверка Dependabot
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  security-events: read

jobs:
  # P1: инцидент, если основной security-workflow упал/таймаут
  open_incident_issue:
    if: >
      github.event_name == 'workflow_run' &&
      (github.event.workflow_run.conclusion == 'failure' ||
       github.event.workflow_run.conclusion == 'timed_out')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Create incident (failed Security Framework Gates)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          TITLE="INC: Security Framework Gates failed in ${GITHUB_REPOSITORY}"
          BODY_FILE="$(mktemp)"
          {
            echo "# Auto-created incident"
            echo
            echo "**Workflow:** Security Framework Gates"
            echo "**Run:** ${{ github.event.workflow_run.html_url }}"
            echo "**Branch:** ${{ github.event.workflow_run.head_branch }}"
            echo
            echo "@MainMuck/oncall"
          } > "$BODY_FILE"
          gh --repo "$GITHUB_REPOSITORY" issue create --title "$TITLE" --body-file "$BODY_FILE" --label "incident,P1"

  # P2: «трекер»-инцидент по открытым Dependabot alert’ам
  dependabot_to_incident:
    if: github.event_name != 'workflow_run'   # только по расписанию/ручному запуску
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Create/refresh Dependabot incident
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          OPEN=$(gh --repo "$GITHUB_REPOSITORY" api repos/${GITHUB_REPOSITORY}/dependabot/alerts \
                 -q '[.[] | select(.state=="open")] | length' 2>/dev/null || echo 0)
          [[ "$OPEN" =~ ^[0-9]+$ ]] || OPEN=0

          if [ "$OPEN" -eq 0 ]; then
            echo "No open Dependabot alerts -> OK"
            exit 0
          fi

          TITLE="INC: Dependabot alerts open in ${GITHUB_REPOSITORY}"
          # ищем уже существующий «трекер»-инцидент
          NUM=$(gh --repo "$GITHUB_REPOSITORY" issue list --state open --search "$TITLE in:title" \
                 --json number -q '.[0].number' 2>/dev/null || echo "")

          if [ -n "${NUM}" ] && [ "${NUM}" != "null" ]; then
            gh --repo "$GITHUB_REPOSITORY" issue comment "$NUM" --body "Still open: ${OPEN} alert(s)."
          else
            BODY_FILE="$(mktemp)"
            {
              echo "# Auto-created incident (Dependabot)"
              echo
              echo "Open alerts: **${OPEN}**"
              echo "See: https://github.com/${GITHUB_REPOSITORY}/security/dependabot"
              echo
              echo "@MainMuck/oncall"
            } > "$BODY_FILE"
            gh --repo "$GITHUB_REPOSITORY" issue create --title "$TITLE" --body-file "$BODY_FILE" --label "incident,P2,dependabot"
          fi
